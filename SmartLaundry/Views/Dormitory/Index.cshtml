@model IEnumerable<SmartLaundry.Models.Dormitory>

@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Dormitory List";
}

<h2>@ViewData["Title"]</h2>

@if (User.IsInRole("Administrator"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @if (User.IsInRole("Administrator"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.DormitoryID">Edit</a> @Html.Raw("|");
                        <a asp-action="Delete" asp-route-id="@item.DormitoryID">Delete</a> @Html.Raw("|");
                    }
                    @if ((await AuthorizationService.AuthorizeAsync(User, "MinimumManager")).Succeeded)
                    {
                        <a asp-action="ManageDormitoryUsers" asp-route-id="@item.DormitoryID">Manage users</a>@Html.Raw("|");
                        <a asp-action="Rooms" asp-route-id="item.DormitoryID">Rooms</a> @Html.Raw("|");
                    }
                    @if ((await AuthorizationService.AuthorizeAsync(User, "MinimumOccupant")).Succeeded)
                    {
                        <a asp-controller="Laundry" asp-action="Index" asp-route-id="@item.DormitoryID">Laundries</a> @Html.Raw("|");
                    }
                    <a asp-action="Details" asp-route-id="@item.DormitoryID">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
