@using Microsoft.CodeAnalysis.CSharp
@using SmartLaundry.Authorization
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@model SmartLaundry.Models.DormitoryViewModels.DormitoryDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Dormitory</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Dormitory.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Dormitory.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Dormitory.Address)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Dormitory.Address)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Dormitory.ZipCode)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Dormitory.ZipCode)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Dormitory.City)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Dormitory.City)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Manager)
        </dt>
        <dd>
            @if (Model.Manager != null)
            {
                Html.Raw(Model.Manager.Firstname + Model.Manager.Lastname);
            }
        </dd>
        <dt>
            Porters
        </dt>
        @foreach (var item in Model.Porters)
        {
            <dd>
                @item.Firstname @item.Lastname
            </dd>
        }
        <dt>
            Laundries
        </dt>
        @foreach (var item in Model.Laundries)
        {
            <dd>
                @item.Id
            </dd>
        }
    </dl>
</div>
<div>
    @if ((await AuthorizationService.AuthorizeAsync(User, Model.Dormitory, AuthPolicies.DormitoryMembership)).Succeeded)
    {
        @if (User.IsInRole("Administrator"))
        {
            <a asp-action="Edit" asp-route-id="@Model.Dormitory.DormitoryID">Edit</a> @Html.Raw("|");
            <a asp-action="Delete" asp-route-id="@Model.Dormitory.DormitoryID">Delete</a> @Html.Raw("|");
        }
        @if ((await AuthorizationService.AuthorizeAsync(User, "MinimumManager")).Succeeded)
        {
            <a asp-action="ManageDormitoryUsers" asp-route-id="@Model.Dormitory.DormitoryID">Manage users</a> @Html.Raw("|");
            <a asp-action="Rooms" asp-route-id="@Model.Dormitory.DormitoryID">Rooms</a> @Html.Raw("|");
        }
        @if ((await AuthorizationService.AuthorizeAsync(User, "MinimumOccupant")).Succeeded)
        {
            <a asp-controller="Laundry" asp-action="Index" asp-route-id="@Model.Dormitory.DormitoryID">Laundries</a> @Html.Raw("|");
        }
    }
    <a asp-action="Index">Back to List</a>
</div>
